# This workflow will install Python dependencies, run tests and lint with a variety of Python versions 4
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build standalone leo.exe

on:
  push:
    branches: [ gh-act ]
  pull_request:
    branches: [ gh-act ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Get pip cache
      # https://github.com/actions/cache/issues/175
      id: pip-cache
      run: |
        import site
        print('::set-output name=dir::' + site.getsitepackages()[0])
      shell: python
    - name: Cache pip packages
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}/../../../
        # note addition of py ver, https://github.com/actions/cache/issues/175#issuecomment-586641991
        #key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
        key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-pip
    
    - name: Install Leo and dependencies
      run: |
        python -m pip install --upgrade pip
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install wheel pyinstaller
        pip install --editable .
    - name: pyinstaller build
      run: |
        $ErrorView = 'NormalView'
        pwd
        ls
        pyinstaller leo/dist/leo.spec
    - name: create dist archive
      run: |
        $ErrorView = 'NormalView'
        python leo/dist/zip-leo-exe.py
    - uses: actions/upload-artifact@v2
      with:
        name: leo-windows-exe
        path: dist/*.zip
